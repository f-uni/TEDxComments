import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:tedxcomments_app/models/talk.dart';

class DataProvider {
  static Future<List<Talk>> getTalksByTag(String tag, int page) async {
    var url = Uri.parse(
        'https://oycb8yznqi.execute-api.us-east-1.amazonaws.com/default/TxC_GetTalksByTag');

    final http.Response response = await http.post(
      url,
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(
          <String, Object>{'tag': tag, 'page': page, 'doc_per_page': 6}),
    );
    if (response.statusCode == 200) {
      Iterable list = json.decode(response.body);
      var talks = list.map((model) => Talk.fromJSON(model)).toList();
      return talks;
    } else {
      throw Exception('Failed to load talks');
    }
  }

  static Future<List<Talk>> getRelatedTalksById(String id) async {
    var url = Uri.parse(
        'https://f2ni1mahx9.execute-api.us-east-1.amazonaws.com/default/TxC_GetWatchNextById');

    final http.Response response = await http.post(
      url,
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(
          <String, Object>{'video_id': id}),
    );
    if (response.statusCode == 200) {
      Iterable list = json.decode(response.body)["result"]["related_videos"];
      var talks = list.map((model) => Talk.fromJSON(model)).toList();
      return talks;
    } else {
      throw Exception('Failed to load talks');
    }
  }

  static Future<dynamic> getCommentsById(String id) async {
    var url = Uri.parse(
        'https://f2ni1mahx9.execute-api.us-east-1.amazonaws.com/default/TxC_GetWatchNextById');

    final http.Response response = await http.post(
      url,
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(
          <String, Object>{'video_id': id}),
    );
    if (response.statusCode == 200) {
      dynamic list = json.decode(response.body)["result"]["comments"];
      return list;
    } else {
      throw Exception('Failed to load comments');
    }
  }

  static Future<void> insertComment(
      String id, String title, String body, int time, String user) async {
    var url = Uri.parse(
        'https://o6cfl57kmi.execute-api.us-east-1.amazonaws.com/default/TxC_InsertComment');
    
    final http.Response response = await http.post(
      url,
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, Object>{
        'video_id': id,
        'user_id': user,
        'timestamp': time,
        'title': title,
        'body': body,
        'type': "extra"
      }),
    );
    if (response.statusCode != 200) {
      throw Exception('Failed to insert comment');
    }
  }

  static List<String> tags = [
    "activism",
    "addiction",
    "aging",
    "agriculture",
    "algorithm",
    "aliens",
    "ancient world",
    "animals",
    "animation",
    "anthropology",
    "archaeology",
    "architecture",
    "art",
    "asteroid",
    "astrobiology",
    "astronomy",
    "atheism",
    "augmented reality",
    "bacteria",
    "beauty",
    "bees",
    "behavioral economics",
    "biodiversity",
    "bioethics",
    "biology",
    "biomimicry",
    "bionics",
    "biosphere",
    "biotech",
    "birds",
    "blindness",
    "blockchain",
    "body language",
    "books",
    "botany",
    "brain",
    "bullying",
    "business",
    "cancer",
    "capitalism",
    "chemistry",
    "china",
    "cities",
    "climate change",
    "code",
    "cognitive science",
    "collaboration",
    "collective",
    "comedy",
    "communication",
    "community",
    "compassion",
    "computers",
    "conducting",
    "consciousness",
    "conservation",
    "consumerism",
    "coral reefs",
    "coronavirus",
    "corruption",
    "creativity",
    "crime",
    "crowdsourcing",
    "cryptocurrency",
    "culture",
    "curiosity",
    "cyber security",
    "dance",
    "dark matter",
    "data",
    "death",
    "decision-making",
    "deextinction",
    "demo",
    "democracy",
    "depression",
    "design",
    "dinosaurs",
    "disability",
    "discovery",
    "disease",
    "diversity",
    "driverless cars",
    "drones",
    "drugs",
    "ebola",
    "ecology",
    "economics",
    "education",
    "electricity",
    "emotions",
    "empathy",
    "encryption",
    "energy",
    "engineering",
    "entertainment",
    "entrepreneur",
    "environment",
    "equality",
    "ethics",
    "evolution",
    "exercise",
    "exploration",
    "family",
    "farming",
    "fashion",
    "fear",
    "feminism",
    "film",
    "finance",
    "fish",
    "flight",
    "food",
    "forensics",
    "fossil fuels",
    "friendship",
    "fungi",
    "future",
    "gaming",
    "gardening",
    "gender",
    "genetics",
    "geology",
    "glaciers",
    "global issues",
    "goals",
    "government",
    "grammar",
    "graphic design",
    "happiness",
    "health",
    "health care",
    "hearing",
    "heart",
    "history",
    "homelessness",
    "human body",
    "human rights",
    "humanity",
    "humor",
    "identity",
    "illness",
    "illusion",
    "immigration",
    "inclusion",
    "india",
    "indigenous peoples",
    "industrial design",
    "infrastructure",
    "innovation",
    "insects",
    "international development",
    "international relations",
    "interview",
    "invention",
    "investing",
    "journalism",
    "justice system",
    "kids",
    "language",
    "law",
    "leadership",
    "library",
    "literature",
    "love",
    "machine learning",
    "magic",
    "manufacturing",
    "maps",
    "marine biology",
    "marketing",
    "math",
    "media",
    "medical imaging",
    "medical research",
    "medicine",
    "meditation",
    "memory",
    "mental health",
    "metaverse",
    "microbes",
    "microbiology",
    "military",
    "mindfulness",
    "money",
    "motivation",
    "museums",
    "music",
    "nanotechnology",
    "natural disaster",
    "natural resources",
    "nature",
    "neurology",
    "neuroscience",
    "nuclear energy",
    "ocean",
    "online privacy",
    "pain",
    "painting",
    "paleontology",
    "pandemic",
    "parenting",
    "performance",
    "personal growth",
    "personality",
    "philanthropy",
    "philosophy",
    "photography",
    "physics",
    "plants",
    "plastic",
    "poetry",
    "policy",
    "politics",
    "pollution",
    "potential",
    "poverty",
    "pregnancy",
    "primates",
    "prison",
    "product design",
    "productivity",
    "prosthetics",
    "protest",
    "psychology",
    "public health",
    "public space",
    "public speaking",
    "quantum",
    "race",
    "refugees",
    "relationships",
    "religion",
    "renewable energy",
    "resources",
    "rivers",
    "robots",
    "rocket science",
    "science",
    "science fiction",
    "self",
    "sex",
    "sexual violence",
    "shopping",
    "sight",
    "sleep",
    "smell",
    "social change",
    "social media",
    "society",
    "sociology",
    "software",
    "solar energy",
    "solar system",
    "sound",
    "space",
    "spoken word",
    "sports",
    "statistics",
    "storytelling",
    "street art",
    "success",
    "suicide",
    "surveillance",
    "sustainability",
    "synthetic biology",
    "teaching",
    "tech",
    "technology",
    "telescopes",
    "television",
    "terrorism",
    "theater",
    "time",
    "toys",
    "transportation",
    "travel",
    "trees",
    "trust",
    "typography",
    "universe",
    "urban planning",
    "veganism",
    "violence",
    "virtual reality",
    "virus",
    "visualizations",
    "vulnerability",
    "war",
    "water",
    "weather",
    "wildlife",
    "wind energy",
    "women",
    "women in business",
    "work",
    "work-life balance",
    "worklife",
    "writing",
    "youth"
  ];
}
